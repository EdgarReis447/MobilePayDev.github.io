openapi: 3.0.3
info:
  title: App payments
  description: |
    # General notes

    All dates use the (`ISO 8601-1:2019`) format.<br>
    Date-time format - `YYYY-MM-DDTHH:mm:ssZ` or `YYYY-MM-DDTHH:mm:ss+00:00`.
  contact:
    email: developer@mobilepay.dk
servers:
  - url: https://api.mobilepay.dk
    description: Production server (uses **live** data)
  - url: https://api.sandbox.mobilepay.dk
    description: Production server (uses **test** data)
tags:
  - name: Payments
    description:
      Payments API makes it easy for you to collect money from your customers using MobilePay.
  - name: Payment points
  - name: Refunds
    description:
      Refunds API makes it easy for you to refund payments to your customers.
      You can refund only those payments that were created via payments API above. 
paths:
  /api/v1/payments:
    post:
      tags:
        - Payments
      summary: Initiates a new payment.
      parameters:
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token (JWT or API key)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRequest'
            example: {
  "amount": 1250,
  "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "paymentPointId": "7347ba06-95c5-4181-82e5-7c7a23609a0e",
  "reference": "My-Payment-1",
  "idempotencyKey": "fae7680f-9875-4ba9-8910-2f2e1791f390",
  "redirectUri": "myapp://redirect",
  "customerPhoneNumber": null,
  "productType": "merchantPayments",
  "paymentDetails": null
}
          text/json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRequest'
            example: {
  "amount": 1250,
  "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "paymentPointId": "7347ba06-95c5-4181-82e5-7c7a23609a0e",
  "reference": "My-Payment-1",
  "idempotencyKey": "fae7680f-9875-4ba9-8910-2f2e1791f390",
  "redirectUri": "myapp://redirect",
  "customerPhoneNumber": null,
  "productType": "merchantPayments",
  "paymentDetails": null
}
          application/*+json:
            schema:
              $ref: '#/components/schemas/InitiatePaymentRequest'
            example: {
  "amount": 1250,
  "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "paymentPointId": "7347ba06-95c5-4181-82e5-7c7a23609a0e",
  "reference": "My-Payment-1",
  "idempotencyKey": "fae7680f-9875-4ba9-8910-2f2e1791f390",
  "redirectUri": "myapp://redirect",
  "customerPhoneNumber": null,
  "productType": "merchantPayments",
  "paymentDetails": null
}
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiatePaymentResponse'
              example: {
  "paymentId": "186d2b31-ff25-4414-9fd1-bfe9807fa8b7",
  "mobilePayAppRedirectUri": "mobilepay://merchant_payments?payment_id=186d2b31-ff25-4414-9fd1-bfe9807fa8b7"
}
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
        '401':
          description: Unauthorized
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
        '403':
          description: Forbidden
      security:
        - MerchantAuthentication: [ ]
    get:
      tags:
        - Payments
      summary: 'Gets a list of all merchant payments if no filters(e.g. stateFilter, startDate, endDate, paymentPointId) are provided. Can also return only payments of specific payment point if paymentPointId is provided.'
      parameters:
        - name: paymentPointId
          in: query
          description: Filter specific payment point payments
          schema:
            type: string
            format: uuid
        - name: pageNumber
          in: query
          description: Default and minimum value is 1. Values that are less than 1 will be replaced by 1.
          schema:
            type: integer
            format: int32
        - name: pageSize
          in: query
          description: Number of payments to be returned. Between 1 and 1000.
          schema:
            type: integer
            format: int32
        - name: stateFilter
          in: query
          description: "Filter payments by state. Allowed values: \"initiated\", \"reserved\", \"captured\",\r\n\"cancelledByMerchant\", \"cancelledByUser."
          schema:
            type: array
            items:
              enum:
                - initiated
                - reserved
                - captured
                - cancelledByMerchant
                - captureStarted
                - cancelledByUser
                - cancelledBySystem
                - terminated
              type: string
        - name: startDate
          in: query
          description: Filter payments by InitiatedOn property.
          schema:
            type: string
            format: date-time
        - name: endDate
          in: query
          description: Filter payments by InitiatedOn property.
          schema:
            type: string
            format: date-time
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token (JWT or API key)
          required: true
          schema:
            type: string
      responses:
        '401':
          description: Unauthorized
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPaymentsResponse'
              example: {
  "pageSize": 1,
  "nextPageNumber": 2,
  "payments": [
    {
      "paymentId": "186d2b31-ff25-4414-9fd1-bfe9807fa8b7",
      "amount": 1250,
      "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
      "paymentPointId": "7347ba06-95c5-4181-82e5-7c7a23609a0e",
      "reference": "My-Payment-1",
      "redirectUri": "myapp://redirect",
      "state": "initiated",
      "initiatedOn": "2023-06-28T10:42:53Z",
      "lastUpdatedOn": "2023-06-28T10:42:53Z",
      "merchantId": "655ad36f-70b0-4add-a123-b943daca50e8",
      "isoCurrencyCode": "DKK",
      "paymentPointName": "MyPaymentPoint"
    }
  ]
}
        '400':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
        '409':
          description: PaymentPoint does not exists
      security:
        - MerchantAuthentication: [ ]
  '/api/v1/payments/{paymentid}':
    get:
      tags:
        - Payments
      summary: Gets a single payment by its ID.
      parameters:
        - name: paymentid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token (JWT or API key)
          required: true
          schema:
            type: string
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSinglePaymentResponse'
              example: {
  "paymentId": "186d2b31-ff25-4414-9fd1-bfe9807fa8b7",
  "amount": 1250,
  "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "paymentPointId": "7347ba06-95c5-4181-82e5-7c7a23609a0e",
  "reference": "My-Payment-1",
  "redirectUri": "myapp://redirect",
  "state": "initiated",
  "initiatedOn": "2023-06-28T10:42:53Z",
  "lastUpdatedOn": "2023-06-28T10:42:53Z",
  "merchantId": "655ad36f-70b0-4add-a123-b943daca50e8",
  "isoCurrencyCode": "DKK",
  "paymentPointName": "MyPaymentPoint"
}
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '409':
          description: Domain error response
      security:
        - MerchantAuthentication: [ ]
  '/api/v1/payments/{paymentid}/capture':
    post:
      tags:
        - Payments
      summary: Capture specific payment
      parameters:
        - name: paymentid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token (JWT or API key)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CapturePaymentRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CapturePaymentRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CapturePaymentRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
        '500':
          description: Server Error
      security:
        - MerchantAuthentication: [ ]
  '/api/v1/payments/{paymentid}/cancel':
    post:
      tags:
        - Payments
      summary: Cancel specific payment
      parameters:
        - name: paymentid
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token (JWT or API key)
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
      security:
        - MerchantAuthentication: [ ]
  /api/v1/payments/cancel:
    post:
      tags:
        - Payments
      summary: Cancel specific payment using idempotency key
      parameters:
        - name: CorrelationId
          in: header
          description: CorrelationId used for logging
          schema:
            type: string
        - name: Authorization
          in: header
          description: Bearer token (JWT or API key)
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelPaymentRequest'
          text/json:
            schema:
              $ref: '#/components/schemas/CancelPaymentRequest'
          application/*+json:
            schema:
              $ref: '#/components/schemas/CancelPaymentRequest'
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
              example: {
  "code": "1234",
  "message": "Lorem ipsum dolor sit amet, consectetur adipiscing elit.",
  "correlationId": "91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd",
  "origin": "MPY"
}
      security:
        - MerchantAuthentication: [ ]
components:
  schemas:
    CancelPaymentRequest:
      required:
        - idempotencyKey
      type: object
      properties:
        idempotencyKey:
          type: string
          description: The idempotency key identifying the payment to be canceled. Only payments in the initiated state can be canceled using the idempotency key.
          format: uuid
      additionalProperties: false
    CapturePaymentRequest:
      required:
        - amount
      type: object
      properties:
        amount:
          type: integer
          description: "The amount to be captured. A positive integer representing how much to capture in the smallest currency unit (e.g.,\r\n100 cents to capture €1.00). The minimum amount is 1."
          format: int32
      additionalProperties: false
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
          nullable: true
          example: '1234'
        message:
          type: string
          nullable: true
          example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'
        correlationId:
          type: string
          nullable: true
          example: 91f2b05f-2171-4cea-9d5a-1cdbed6ae2cd
        origin:
          type: string
          nullable: true
          example: MPY
      additionalProperties: false
    GetPaymentsResponse:
      required:
        - pageSize
        - payments
      type: object
      properties:
        pageSize:
          type: integer
          description: The number of payments per page. The range is 1 to 1000.
          format: int32
          example: 1
        nextPageNumber:
          type: integer
          description: A number of the next page. The null value indicates that the response has the last page.
          format: int32
          nullable: true
          example: 2
        payments:
          type: array
          items:
            $ref: '#/components/schemas/GetSinglePaymentResponse'
          description: The requested list of payments.
          example:
            - PaymentId: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
              Amount: 1250
              Description: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'
              PaymentPointId: 7347ba06-95c5-4181-82e5-7c7a23609a0e
              Reference: My-Payment-1
              RedirectUri: myapp://redirect
              State: initiated
              InitiatedOn: '2023-06-28T12:42:53.2943503+02:00'
              LastUpdatedOn: '2023-06-28T12:42:53.2943526+02:00'
              MerchantId: 655ad36f-70b0-4add-a123-b943daca50e8
              IsoCurrencyCode: DKK
              PaymentPointName: MyPaymentPoint
      additionalProperties: false
    GetSinglePaymentResponse:
      required:
        - amount
        - initiatedOn
        - isoCurrencyCode
        - lastUpdatedOn
        - merchantId
        - paymentId
        - paymentPointId
        - paymentPointName
        - redirectUri
        - state
      type: object
      properties:
        paymentId:
          type: string
          description: The ID of the payment.
          format: uuid
          example: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
        amount:
          type: integer
          description: "The amount of money to be collected by this payment.\r\nA positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge\r\n€1.00). The minimum amount is 1. The maximum amount is defined by user's daily/yearly limits."
          format: int32
          example: 1250
        description:
          type: string
          description: "Optional payment information to be displayed in MobilePay app to the customer. This can be, for example, an invoice\r\nnumber, ticket number, or short description that uniquely identifies the purchase."
          nullable: true
          example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'
        paymentPointId:
          type: string
          description: The payment point on which payment was initiated.
          format: uuid
          example: 7347ba06-95c5-4181-82e5-7c7a23609a0e
        reference:
          type: string
          description: Payment's reference provided by you.
          nullable: true
          example: My-Payment-1
        redirectUri:
          type: string
          description: Deeplink is used to redirect MobilePay users back to the merchant's app.
          example: myapp://redirect
        state:
          enum:
            - initiated
            - reserved
            - captured
            - cancelledByMerchant
            - captureStarted
            - cancelledByUser
            - cancelledBySystem
            - terminated
          type: string
          description: "Indicates whether the payment is \"initiated\", \"reserved\", \"captured\", \"cancelledByMerchant\", \"cancelledBySystem\",\r\n\"cancelledByUser\"."
          example: initiated
        initiatedOn:
          type: string
          description: "The timestamp of when the payment was created, in ISO 8601-1:2019 format.<br />\r\nExamples for July 19th, 2021 12:42:38am Pacific Standard Time:<br />\r\nUTC: 2021-07-19T12:42:38Z"
          format: date-time
          example: '2023-06-28T12:42:53.2939972+02:00'
        lastUpdatedOn:
          type: string
          description: 'The timestamp of when the payment was created, in ISO 8601-1:2019 format.'
          format: date-time
          example: '2023-06-28T12:42:53.2940021+02:00'
        merchantId:
          type: string
          description: Merchant ID associated with the payment.
          format: uuid
          example: 655ad36f-70b0-4add-a123-b943daca50e8
        isoCurrencyCode:
          type: string
          description: "Three-letter <a href=\"https://www.iso.org/iso-4217-currency-codes.html\">ISO currency code</a>, in uppercase.<br />\r\nPossible values:<br />\r\n\"DKK\",<br />\r\n\"EUR\""
          example: DKK
        paymentPointName:
          type: string
          description: Payment point name displayed to the user in MobilePay app.
          example: MyPaymentPoint
      additionalProperties: false
    InitiatePaymentRequest:
      required:
        - amount
        - idempotencyKey
        - paymentPointId
        - redirectUri
        - reference
      type: object
      properties:
        amount:
          type: integer
          description: "The amount of money to be collected by this payment.\r\nA positive integer representing how much to charge in the smallest currency unit (e.g., 100 cents to charge\r\n€1.00). The minimum amount is 1. The maximum amount is defined by user's daily/yearly limits."
          format: int32
          example: 1250
        description:
          maxLength: 200
          minLength: 0
          type: string
          description: "Optional payment information to be displayed in MobilePay app to the customer. Max length: 200 characters.<br />\r\nThis can be, for example, an invoice number, ticket number, or short description that uniquely identifies the\r\npurchase."
          nullable: true
          example: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit.'
        paymentPointId:
          type: string
          description: The Payment Point ID to associate with a payment.
          format: uuid
          example: 7347ba06-95c5-4181-82e5-7c7a23609a0e
        reference:
          maxLength: 64
          minLength: 0
          type: string
          description: "An ID to associate with the payment. Max length: 64 characters.<br />\r\nYou can use this field to associate the payment to an entity in an external system (for example, you might specify\r\nan order ID that is generated by your system). It is recommended to use a unique value for each payment."
          example: My-Payment-1
        idempotencyKey:
          type: string
          description: "A unique value that identifies this InitiatePayment request. Must be a valid GUID, and is used to protect against\r\naccidental duplicate calls. Multiple requests with the same idempotency key have the same result."
          format: uuid
          example: fae7680f-9875-4ba9-8910-2f2e1791f390
        redirectUri:
          maxLength: 2000
          minLength: 0
          type: string
          description: "MobilePay will use the redirectUri URL to redirect the MobilePay user to the merchant's confirmation page once user\r\naction is completed in MobilePay app. Must be a valid URI."
          example: myapp://redirect
        customerPhoneNumber:
          maxLength: 15
          minLength: 0
          type: string
          description: MobilePay will use the (international) phone number to prefill the landing page for dual device flows.
          nullable: true
          example: 
        productType:
          enum:
            - merchantPayments
          type: string
          description: Which product is used to process the payment
          example: merchantPayments
        paymentDetails:
          type: object
          additionalProperties:
            type: string
          description: Product-specific payment details
          nullable: true
          example: 
      additionalProperties: false
    InitiatePaymentResponse:
      required:
        - mobilePayAppRedirectUri
        - paymentId
      type: object
      properties:
        paymentId:
          type: string
          description: A unique ID for the payment.
          format: uuid
          example: 186d2b31-ff25-4414-9fd1-bfe9807fa8b7
        mobilePayAppRedirectUri:
          type: string
          description: Deeplink to MobilePay app.
          example: mobilepay://merchant_payments?payment_id=186d2b31-ff25-4414-9fd1-bfe9807fa8b7
      additionalProperties: false
  securitySchemes:
    MerchantAuthentication:
      type: apiKey
      description: 'JWT authorization header using the Bearer scheme. Example: "Authorization: Bearer {token}"'
      name: Authorization
      in: header
